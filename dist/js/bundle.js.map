{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/mystyles.scss","webpack:///./src/todoApp.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,mBAAO,CAAC,4CAAiB;AACzB,mBAAO,CAAC,sCAAc;;;;;;;;;;;;ACDtB,yC;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,mFAAmF;;AAEnF,8B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,8B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA,mC;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,C","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","require('./mystyles.scss');\nrequire('./todoApp.js');\n","// removed by extract-text-webpack-plugin","const form = document.getElementById('inputTodoForm');\nconst todoInput = document.getElementById('todoInput');\nconst deleteBtn = document.querySelectorAll('.delete');\nconst deleteAllBtn = document.getElementById('deleteAll');\nconst todo = document.getElementById('todoUl');\nconst todoItems = todo.childNodes;\n\nwindow.onload = renderTodo();\n\n// events\n// add todo\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n    \n    // get the value\n    let todoVal = document.getElementById('todoInput').value;\n    \n    // exit if empty\n    if(!todoVal) return;\n\n    // save to local storeage\n    let ID  = saveToLocal(todoVal);\n    \n    // adds todo to screen\n    addToDo(todoVal, ID);\n    \n    // reset input\n    document.getElementById('todoInput').value = \"\";\n});\n\ndeleteAllBtn.addEventListener('click', () =>  {\n    window.localStorage.clear();\n    \n    todoItems.forEach((el) => {\n        el.style.display = 'none';\n    });\n\n});\n\ntodoItems.forEach((el) => {\n    el.addEventListener('click', doComplete);\n});\n\nfunction retrieveTodo() {\n    let temp = window.localStorage.getItem('todo');\n\n    if(!temp) return;\n    \n    return JSON.parse(temp);\n}\n\nfunction renderTodo() {\n\n    if(!window.localStorage) window.localStorage.setItem('todo', JSON.stringify([{}]));\n\n    let temp = retrieveTodo(); \n\n    // render todo\n    temp.forEach((el) => {\n        \n        let title = el.title;\n        let ID = el.id;\n        // let complete = el.complete\n\n        // runs the add todo-function\n        addToDo(title, ID);\n        \n    });\n}\n\n\n// add todo to list\nfunction addToDo(data, ID) {\n    \n    // create div element\n    const box = document.createElement('div');\n    box.setAttribute('class', 'box');\n    box.addEventListener('click', doComplete);\n    \n    // create li element and adds unique id \n    const listItem = document.createElement('li');\n    listItem.setAttribute('data-id', ID);\n\n    \n    // create deleteBtn\n    const deleteBtnLink = document.createElement('a');\n    deleteBtnLink.setAttribute('class', 'delete');\n    \n    // adds delete function to new element\n    deleteBtnLink.addEventListener('click', (e) => {\n        // get list item data and elemets\n        const listItem = e.target.parentElement;\n        // .box to remove\n        const target = listItem.parentElement;\n        // listitem data\n        const ID = Number(listItem.dataset.id);\n        \n        removeTodo(ID, target);\n    });\n    \n    // add list item to ul and display the data to the screen\n    todo.appendChild(box).appendChild(listItem);\n    listItem.innerHTML = data; \n    listItem.appendChild(deleteBtnLink);\n\n}\nfunction removeTodo(ID, target) {\n    \n    // removes li from screen\n    if(target) target.style.display = 'none';\n\n    // filter the right object from the arr to remove\n    let temp = retrieveTodo();\n    if(!temp) return;\n\n    // filters out the right ID and then updates storage\n    let trimmed = temp.filter(el => el.id != ID);\n    window.localStorage.setItem('todo', JSON.stringify(trimmed));\n        \n}\n\nfunction saveToLocal(data, done = false ) {\n\n    // get current date\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n    // format date\n    today = dd + '/' + mm + '/' + yyyy;\n\n    // get todo array from storage\n    let temp = retrieveTodo();\n\n    if(!temp) {\n        temp = [];\n    }\n\n    let ID = temp.length + 1;\n    // TODO: lÃ¤gg till due och skapelsedatum\n    // add data to temporary object\n    temp.push({\n        id: ID,\n        title: data,\n        due: null,\n        modified: today,\n        created: null,\n        completed: done,\n    });\n    \n    // saves temporart object to local storage\n    window.localStorage.setItem('todo', JSON.stringify(temp));\n\n    return ID\n}\n\n// adds complete class and saves to storage\nfunction doComplete(e) {\n    let target = e.currentTarget;\n    // toggle complete class\n    target.classList.toggle('completed');\n\n    //  get id of current listitem\n    let thisID = Number(target.children[0].dataset.id);\n    \n    // get localstorage array and filter out the correct listitem\n    let temp = retrieveTodo();\n    console.log(temp);\n    \n    let updatedTodo = temp.forEach((el, index, array) => {\n        if (index !== thisID) return;\n\n        console.log(thisID);\n        console.log(el.completed);\n        el.completed = true;\n        console.log(el.completed);\n        console.log(array);\n        \n        \n        // if(el.id === thisID && el.completed) {\n        //     console.log('is true');\n            \n        //     el.completed = false;\n        //     return temp;\n        // } else if(el.id === thisID && !el.completed) {\n        //     console.log('is false');\n            \n        //     el.completed = true;      \n        //     return temp;\n        // }\n    });\n    console.log(updatedTodo);\n    \n    // window.localStorage.setItem('todo', JSON.stringify(updatedTodo));\n    \n    // let thisTodo = temp.filter(el => el.id == thisID);\n    // let data = thisTodo[0].title;\n\n    // // remove old item, and set complete status\n    // if(thisTodo[0].completed) {\n    //     // removeTodo(thisID);\n    //     saveToLocal(data, false);\n    //     console.log('Saved false');\n    // } else {\n    //     removeTodo(thisID);\n    //     saveToLocal(data, true);\n    //     // console.log('Saved true');\n    // }\n\n}"],"sourceRoot":""}